export default function Sjf(req, res) {
    res.status(200).json('#include <stdio. H> int main() { int bt[20], p[20], wt[20], tat[20], i, j, n, total = 0, pos, temp; float avwt, avtat; printf(" sjf scheduling\n"); printf(" ================\n"); printf("enter number of processes: \n"); scanf("%d", &n); printf("enter burst time: \n"); for (i = 0; i < n; i++) { printf("p[%d] : ", i + 1); scanf("%d", &bt[i]); p[i] = i + 1; } printf("\nprocess\t\tburst time\t\twaiting time\t\tturnaround time\n"); for (i = 0; i < n; i++) { pos = i; for (j = i + 1; j < n; j++) if (bt[j] < bt[pos]) pos = j; temp = bt[i]; bt[i] = bt[pos]; bt[pos] = temp; temp = p[i]; p[i] = p[pos]; p[pos] = temp; } wt[0] = 0; for (i = 0; i < n; i++) { wt[i] = 0; for (j = 0; j < i; j++) wt[i] += bt[j]; } for (i = 0; i < n; i++) { tat[i] = bt[i] + wt[i]; avwt += wt[i]; avtat += tat[i]; printf("p[%d]\t\t%d\t\t\t%d\t\t\t%d\n", p[i], bt[i], wt[i], tat[i]); } avwt /= i; avtat /= i; printf("average waiting time : %f\n", avwt); printf("average turnaround time : %f\n", avtat); return 0; }')
  }  