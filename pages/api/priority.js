export default function Priority(req, res) {
    res.status(200).json('#include <stdio. H> int main() { int bt[20], p[20], wt[20], tat[20], pr[20], i, j, n, total = 0, pos, temp; float avwt, avtat; printf(" priority scheduling\n"); printf(" =====================\n"); printf("enter number of processes: \n"); scanf("%d", &n); for (i = 0; i < n; i++) { printf("\np[%d]\n", i + 1); printf("burst time : "); scanf("%d", &bt[i]); printf("priority : "); scanf("%d", &pr[i]); p[i] = i + 1; } for (i = 0; i < n; i++) { pos = i; for (j = i + 1; j < n; j++) if (pr[j] < pr[pos]) pos = j; temp = pr[i]; pr[i] = pr[pos]; pr[pos] = temp; temp = bt[i]; bt[i] = bt[pos]; bt[pos] = temp; temp = p[i]; p[i] = p[pos]; p[pos] = temp; } wt[0] = 0; for (i = 0; i < n; i++) { wt[i] = 0; for (j = 0; j < i; j++) wt[i] += bt[j]; total += wt[i]; } avwt = total / n; total = 0; printf("\nprocess\t burst time\twaiting time\tturnaround time\n"); for (i = 0; i < n; i++) { tat[i] = bt[i] + wt[i]; total += tat[i]; printf("p[%d]\t %d\t\t%d\t\t%d\n", p[i], bt[i], wt[i], tat[i]); } avtat = total / n; printf("average waiting time : %f\n", avwt); printf("average turnaround time : %f\n", avtat); return 0; }')
  }  